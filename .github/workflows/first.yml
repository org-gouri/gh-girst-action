name: Project2 Workflow
on:
  push:
    branches:
      - main
  #pull_request:
  #  types:   # repository_dispatch,schedule,workflow_call,workflow_dispatch
  #    - opened # activity type
  #  branches: #only push to the below branches will trigger
  #    - main #main
  #    - 'dev-*' # dev-new (any thing insingle *)
  #    - 'feat/**' # feat/new, feat/new/button
  #workflow_dispatch:
  #push:   # events and event filters example
  #  branches: #only push to the below branches will trigger
  #    - main #main
  #    - 'dev-*' # dev-new (any thing insingle *)
  #    - 'feat/**' # feat/new, feat/new/button
    #paths-ignore: # we need to give path and if some files moodified or changed then in above branches even it will not trigger
  #  paths:
  #    - '.github/workflows/*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code from repo to agent pool will use
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: lint
        run: npm run lint
  deploy:
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code from repo to agent pool will use
        uses: actions/checkout@v3
      - name: cache dependencies   # it need to be before dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm   # for js languages
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: lint
        run: npm run lint
      - name: test
        run: npm run test
      - name: build
        run: npm run build
      - name: publish JS files
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: |
            dist
            package.json
      - name: deployment
        run: echo "deploying..."
  download:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: output file
        run: echo "${{ needs.deploy.outputs.script-file }}"
      - name: Display structure of downloaded files
        run: ls -R
    
  

       # run: echo "${{ toJSON(github) }}"

